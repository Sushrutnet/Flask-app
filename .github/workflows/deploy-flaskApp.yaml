name: Deploy Flask App to Minikube

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      # Install dependencies (Docker, Minikube, kubectl)
      - name: Set up dependencies
        run: |
          # Install Minikube
          if ! command -v minikube; then
            curl -LO https://storage.googleapis.com/minikube/releases/latest/minikube-linux-amd64
            sudo mv minikube-linux-amd64 /usr/local/bin/minikube
            sudo chmod +x /usr/local/bin/minikube
          fi

          # Install Docker
          if ! command -v docker; then
            sudo apt-get update
            sudo apt-get install -y ca-certificates curl
            sudo apt-get install -y docker.io
            sudo systemctl start docker
          fi

          # Install kubectl
          if ! command -v kubectl; then
            curl -LO https://dl.k8s.io/release/v1.26.0/bin/linux/amd64/kubectl
            sudo mv kubectl /usr/local/bin/
            sudo chmod +x /usr/local/bin/kubectl
          fi

      # Ensure Docker is running
      - name: Ensure Docker is running
        run: |
          sudo systemctl start docker
          sudo systemctl enable docker

      # Start Minikube
      - name: Start Minikube
        run: |
          minikube start --driver=docker || minikube start --driver=docker

      # Update kubectl context to Minikube
      - name: Update kubectl context
        run: |
          minikube update-context

      # Set kubectl context explicitly
      - name: Ensure kubectl context is properly set
        run: |
          kubectl config use-context minikube

      # Apply Kubernetes Deployment for Flask App
      - name: Deploy Flask app to Kubernetes
        run: |
          kubectl apply -f flask-deployment.yaml --validate=false

      # Check deployment status
      - name: Wait for deployment to complete
        run: |
          kubectl rollout status deployment flask-app-deployment

      # Verify that the Flask app is running
      - name: Verify the Flask app is running
        run: |
          kubectl get pods
