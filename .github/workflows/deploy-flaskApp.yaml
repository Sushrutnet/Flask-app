name: Deploy Flask App with Public Image on Minikube

on:
  push:
    branches:
      - main

env:
  DOCKER_IMAGE: public-dockerhub-image/flask-app:latest
  KUBECONFIG: /home/runner/.kube/config

jobs:
  deploy:
    name: Deploy to Kubernetes Cluster on Self-Hosted Minikube
    runs-on: self-hosted

    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Install Minikube
        run: |
          if ! command -v minikube &>/dev/null; then
            echo "Minikube not found, installing..."
            curl -LO https://storage.googleapis.com/minikube/releases/latest/minikube-linux-amd64
            sudo install minikube-linux-amd64 /usr/local/bin/minikube
          else
            echo "Minikube already installed."
          fi

      - name: Install Docker
        run: |
          if ! command -v docker &>/dev/null; then
            echo "Docker not found, installing..."
            sudo apt-get update
            sudo apt-get install -y ca-certificates curl gnupg lsb-release
            sudo curl -fsSL https://download.docker.com/linux/ubuntu/gpg -o /etc/apt/keyrings/docker.asc
            sudo chmod a+r /etc/apt/keyrings/docker.asc
            sudo sh -c 'echo "deb [arch=amd64 signed-by=/etc/apt/keyrings/docker.asc] https://download.docker.com/linux/ubuntu $(lsb_release -cs) stable" > /etc/apt/sources.list.d/docker.list'
            sudo apt-get update
            sudo apt-get install -y docker-ce docker-ce-cli containerd.io
            sudo usermod -aG docker $USER
          else
            echo "Docker already installed."
          fi

      - name: Start Minikube
        run: |
          minikube status || minikube start --driver=docker

      - name: Configure Kubeconfig for Minikube
        run: |
          mkdir -p ~/.kube
          minikube config view --format='{{.KubeConfigPath}}' | xargs cat > ~/.kube/config

      - name: Deploy App to Kubernetes
        run: |
          kubectl apply -f flask-deployment.yaml --validate=false

      - name: Verify Deployment
        run: |
          kubectl rollout status deployment flask-app || (echo "Deployment failed" && exit 1)

  notify:
    name: Notify on Failure
    needs: deploy
    runs-on: self-hosted
    if: failure()

    steps:
      - name: Print Error Log
        run: echo "Deployment to Kubernetes failed. Check the logs for more details."

      - name: Notify Slack (Optional)
        uses: slackapi/slack-github-action@v1.24.0
        with:
          payload: |
            {
              "channel": "#your-channel",
              "text": "Deployment failed. Check GitHub Actions logs."
            }
        env:
          SLACK_BOT_TOKEN: ${{ secrets.SLACK_BOT_TOKEN }}
